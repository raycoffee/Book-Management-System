name: CI/CD Pipeline to GCE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: asia-south1-docker.pkg.dev
  DOCKER_REPO: docker-repo
  GCE_ZONE: asia-south1-a
  GCE_INSTANCE: book-management-vm

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCLOUD_SERVICE_KEY }}'

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker authentication
      run: |
        gcloud auth configure-docker ${{ env.REGISTRY }} --quiet

    - name: Build and push client Docker image
      run: |
        VERSION=$(echo $GITHUB_SHA | cut -c1-7)
        docker build -t ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.DOCKER_REPO }}/client:$VERSION ./client
        docker push ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.DOCKER_REPO }}/client:$VERSION
        echo "CLIENT_VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build and push server Docker image
      run: |
        VERSION=$(echo $GITHUB_SHA | cut -c1-7)
        docker build -t ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.DOCKER_REPO }}/server:$VERSION ./server
        docker push ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.DOCKER_REPO }}/server:$VERSION
        echo "SERVER_VERSION=$VERSION" >> $GITHUB_ENV

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCLOUD_SERVICE_KEY }}'

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy to GCE
      run: |
        gcloud compute ssh ${{ env.GCE_INSTANCE }} --zone=${{ env.GCE_ZONE }} --command="
        sudo docker pull ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.DOCKER_REPO }}/client:${{ env.CLIENT_VERSION }};
        sudo docker pull ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.DOCKER_REPO }}/server:${{ env.SERVER_VERSION }};
        sudo docker stop client || true && sudo docker rm client || true;
        sudo docker stop server || true && sudo docker rm server || true;
        sudo docker run -d --name client -p 80:80 ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.DOCKER_REPO }}/client:${{ env.CLIENT_VERSION }};
        sudo docker run -d --name server -p 3001:3001 ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.DOCKER_REPO }}/server:${{ env.SERVER_VERSION }};
        "